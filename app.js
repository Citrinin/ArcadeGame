!function o(a,s,u){function c(t,e){if(!s[t]){if(!a[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(h)return h(t,!0);var i=new Error("Cannot find module '"+t+"'");throw i.code="MODULE_NOT_FOUND",i}var r=s[t]={exports:{}};a[t][0].call(r.exports,function(e){return c(a[t][1][e]||e)},r,r.exports,o,a,s,u)}return s[t].exports}for(var h="function"==typeof require&&require,e=0;e<u.length;e++)c(u[e]);return c}({1:[function(e,t,n){"use strict";var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0});var r,o=e("./person"),a=(r=o)&&r.__esModule?r:{default:r};var s=function(e){function n(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n);var t=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":i(t))&&"function"!=typeof t?e:t}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e,".dummy-enemy-img",!1));return t.width=100,t.height=126,t.position={x:t.game.width*Math.random(),y:t.game.height/2*Math.random()},t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":i(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,a.default),n}();n.default=s},{"./person":4}],2:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}}(),r=a(e("./hero")),o=a(e("./dummyEnemy"));function a(e){return e&&e.__esModule?e:{default:e}}var s=function(){function t(){var e=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.width=800,this.height=800,this.level=1,this.baseSpeed=0,this.canvas=document.querySelector("canvas"),this.canvas.width=this.width,this.canvas.height=this.height,this.context=this.canvas.getContext("2d"),this.characters=new Array(2).fill(0).map(function(){return new o.default(e)}),this.characters.push(new r.default(this)),this.gamePlays=!1,this.setUpGame(),this.timer=0}return i(t,[{key:"setUpGame",value:function(){var t=this;this.timer=setInterval(function(){t.context.clearRect(0,0,t.width,t.height),t.characters.forEach(function(e){return t.drawCharacter(e)})},30)}},{key:"drawCharacter",value:function(e){e.imageOrientation()?(this.context.save(),this.context.scale(-1,1),this.context.drawImage(e.getNextSprite(),-1*e.position.x,e.position.y,-1*e.width,e.height),this.context.restore()):this.context.drawImage(e.getNextSprite(),e.position.x,e.position.y,e.width,e.height)}},{key:"runGame",value:function(){this.gamePlays=!0,this.baseSpeed=5}},{key:"pauseGame",value:function(){this.gamePlays=!1,this.baseSpeed=0,clearInterval(this.timer)}}]),t}();n.default=s},{"./dummyEnemy":1,"./hero":3}],3:[function(e,t,n){"use strict";var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0});var r,o=function(){function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}}(),a=e("./person"),s=(r=a)&&r.__esModule?r:{default:r};var u=function(e){function n(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n);var t=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":i(t))&&"function"!=typeof t?e:t}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e,".cat-img"));return t.setUpHero(),t.width=115,t.height=100,t.position={x:(t.game.width-t.width)/2,y:t.game.height-t.height},t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":i(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,s.default),o(n,[{key:"setUpHero",value:function(){var t=this;document.addEventListener("keydown",function(e){t.game.gamePlays||(t.game.runGame(),t.speed=t.game.baseSpeed*t.game.level),37===e.keyCode&&(t.directionAngle=Math.PI),38===e.keyCode&&(t.directionAngle=Math.PI/2*3),39===e.keyCode&&(t.directionAngle=0),40===e.keyCode&&(t.directionAngle=Math.PI/2)})}}]),n}();n.default=u},{"./person":4}],4:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}}();var i=function(){function i(e,t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),this.mainHero=n,this.game=e,this.directionAngle=this.mainHero?0:2*Math.PI*Math.random(),this.position={x:0,y:0},this.sprites=[].slice.call(document.querySelectorAll(t)),this.speed=e.level*e.baseSpeed,this.currentImg=0}return r(i,[{key:"getNextSprite",value:function(){return this.step(),this.currentImg>=this.sprites.length&&(this.currentImg=0),this.sprites[this.currentImg++]}},{key:"step",value:function(){this.speed=this.game.baseSpeed*this.game.level,this.position.x+=Math.cos(this.directionAngle)*this.speed,this.position.x+this.width/2>this.game.width&&(this.position.x=-this.width/2),this.position.x+this.width/2<0&&(this.position.x=this.game.width-this.width/2),this.position.y+=Math.sin(this.directionAngle)*this.speed,this.position.y+this.height/2>this.game.height&&(this.position.y=-this.height/2),this.position.y+this.height/2<0&&(this.position.y=this.game.height-this.height/2)}},{key:"imageOrientation",value:function(){return this.directionAngle>=Math.PI/2&&this.directionAngle<=3*Math.PI/2}}]),i}();n.default=i},{}],5:[function(e,t,n){"use strict";var i=o(e("./utils/router")),r=o(e("./routes"));function o(e){return e&&e.__esModule?e:{default:e}}new i.default(r.default)},{"./routes":6,"./utils/router":8}],6:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=r(e("./gameObjects/gameState")),o=r(e("./utils/detectMobile"));function r(e){return e&&e.__esModule?e:{default:e}}var a=document.querySelector(".content");!function(){if((0,o.default)()){var e=document.createElement("div");e.classList.add("buttons");var t=document.createElement("button");t.innerHTML="<",t.classList.add("left");var n=document.createElement("button");n.innerHTML="^",n.classList.add("up");var i=document.createElement("button");i.innerHTML=">",i.classList.add("right");var r=document.createElement("button");r.innerHTML="v",r.classList.add("down"),e.appendChild(t),e.appendChild(n),e.appendChild(i),e.appendChild(r),e.addEventListener("click",function(e){if(e.target.matches(".right")){var t=new Event("keydown");return t.keyCode=39,void document.dispatchEvent(t)}if(e.target.matches(".left")){var n=new Event("keydown");return n.keyCode=37,void document.dispatchEvent(n)}if(e.target.matches(".up")){var i=new Event("keydown");return i.keyCode=38,void document.dispatchEvent(i)}if(e.target.matches(".down")){var r=new Event("keydown");return r.keyCode=40,void document.dispatchEvent(r)}}),document.body.appendChild(e)}}();var s=[{match:"",onEnter:function(){window.location.hash="game"}},{match:"about",onEnter:function(){u("about"),a.innerHTML='<h1 class="about"><span>Super game Cat vs Ninjas</span><h1>'}},{match:"game",onEnter:function(){u("game");var e=document.createElement("canvas");a.innerHTML="",a.appendChild(e),new i.default}},{match:"scores",onEnter:function(){u("scores"),a.innerHTML='<h1 class="about"><span>Scores</span><h1>'}}];function u(e){document.querySelector(".active").className="",document.querySelector('[href="#'+e+'"]').parentElement.className="active"}n.default=s},{"./gameObjects/gameState":2,"./utils/detectMobile":7}],7:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){return!!(navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/webOS/i)||navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPod/i)||navigator.userAgent.match(/BlackBerry/i)||navigator.userAgent.match(/Windows Phone/i))}},{}],8:[function(e,t,n){"use strict";function i(e){var t=this;this.routes=e||[],this.currentRoute,this.previousRoute,this.currentParams,this.previousParams,window.addEventListener("hashchange",function(){t.handler(window.location.hash)}),this.handler(window.location.hash)}Object.defineProperty(n,"__esModule",{value:!0}),(n.default=i).prototype={handler:function(e){this.previousRoute=this.currentRoute,this.previousParams=this.currentParams,this.currentRoute=this.findNewRoute(e),this.launchHandlers()},findNewRoute:function(e){e=e.slice(1);for(var t=0;t<this.routes.length;t++){var n=this.routes[t];if("string"==typeof n.match&&n.match===e)return this.currentParams="",n;if("function"==typeof n.match&&n.match(e))return this.currentParams="",n;if(n.match instanceof RegExp&&n.match.test(e))return this.currentParams=e.match(n.match)||[],this.currentParams.splice(0,1),n}},launchHandlers:function(){var e=this;Promise.resolve().then(function(){e.previousRoute&&e.previousRoute.onLeave&&e.previousRoute.onLeave(e.previousParams)}).then(function(){e.currentRoute&&e.currentRoute.onBeforeEnter&&e.currentRoute.onBeforeEnter(e.currentParams)}).then(function(){e.currentRoute&&e.currentRoute.onEnter&&e.currentRoute.onEnter(e.currentParams)})}}},{}]},{},[5]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
