!function o(a,s,u){function c(t,e){if(!s[t]){if(!a[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(l)return l(t,!0);var r=new Error("Cannot find module '"+t+"'");throw r.code="MODULE_NOT_FOUND",r}var i=s[t]={exports:{}};a[t][0].call(i.exports,function(e){return c(a[t][1][e]||e)},i,i.exports,o,a,s,u)}return s[t].exports}for(var l="function"==typeof require&&require,e=0;e<u.length;e++)c(u[e]);return c}({1:[function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0});var i,o=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),a=e("./person"),s=(i=a)&&i.__esModule?i:{default:i};var u=function(e){function n(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n);var t=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));return t.width=36,t.height=48,t.getSprites(),t.generatePosition(),t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,s.default),o(n,[{key:"generatePosition",value:function(){for(;this.position={x:Math.abs(this.width-this.game.width*Math.random()),y:this.game.height/2*Math.random()},this.getDistanceToHero()<200;);}},{key:"getDistanceToHero",value:function(){var e=this.game.hero;return Math.sqrt(Math.pow(e.position.x-this.position.x,2)+Math.pow(e.position.y-this.position.y,2))}},{key:"getSprites",value:function(){this.sprites=[].slice.call(document.querySelectorAll(".goblin-img"))}}]),n}();n.default=u},{"./person":4}],2:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),i=u(e("./hero")),o=u(e("./dummyEnemy")),a=u(e("./smartEnemy")),s=u(e("../utils/firebase"));function u(e){return e&&e.__esModule?e:{default:e}}var c=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.width=1e3<=window.innerWidth?1e3:window.innerWidth,this.height=(document.documentElement.clientHeight||document.body.clientHeight)-160,this.containter=e}return r(t,[{key:"setUpGame",value:function(){var t=this;this.canvas=document.createElement("canvas"),this.containter.innerHTML="",this.containter.appendChild(this.canvas),this.canvas.width=this.width,this.canvas.height=this.height,this.context=this.canvas.getContext("2d"),this.hero=new i.default(this),this.characters=[],this.characters=new Array(2).fill(0).map(function(){return new o.default(t)}),this.characters.push(new a.default(this)),this.level=1,this.baseSpeed=0,this.gamePlays=!1,this.gameTimer=0,this.timerHandler=setInterval(function(){t.context.clearRect(0,0,t.width,t.height),t.characters.forEach(function(e){return t.checkCharactersIntersection(t.hero,e)}),t.drawCharacter(t.hero),t.characters.forEach(function(e){return t.drawCharacter(e)})},100)}},{key:"drawCharacter",value:function(e){this.context.drawImage(e.getNextSprite(),e.position.x,e.position.y,e.width,e.height)}},{key:"runGame",value:function(){this.gameTimer=(new Date).getTime(),this.gamePlays=!0,this.baseSpeed=5,this.setLevel()}},{key:"checkCharactersIntersection",value:function(e,t){e.position.x+35<=t.position.x+t.width&&e.position.x+e.width>=t.position.x+35&&e.position.y+10<=t.position.y+t.height&&e.position.y+e.height>=t.position.y+10&&(e.die(),this.loseGame())}},{key:"loseGame",value:function(){this.endGame();var e=((new Date).getTime()-this.gameTimer)/1e3,t=prompt("Your score is "+e+" seconds.\n Enter your name","Ninja");t&&s.default.saveScore({name:t,score:e})}},{key:"endGame",value:function(){clearInterval(this.timerHandler),clearInterval(this.levelTimer),this.gamePlays=!1,this.baseSpeed=0}},{key:"setLevel",value:function(){var t=this;this.levelTimer=setInterval(function(){t.level+=1,t.characters.push(new o.default(t)),t.level%2==1&&t.characters.push(new a.default(t));var e=document.createElement("div");e.classList.add("level-up"),e.innerHTML="Level Up! Current level - "+t.level,t.containter.appendChild(e),setTimeout(function(){t.containter.removeChild(e)},1e3)},1e4)}}]),t}();n.default=c},{"../utils/firebase":11,"./dummyEnemy":1,"./hero":3,"./smartEnemy":5}],3:[function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0});var i,o=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),a=e("./smartPerson"),s=(i=a)&&i.__esModule?i:{default:i};var u=function(e){function n(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n);var t=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e,"knight"));return t.setUpHero(),t.width=75,t.height=75,t.position={x:(t.game.width-t.width)/2,y:t.game.height-t.height},t.sprites=t.spritesCollection.down,t.directionAngle=Math.PI/2,t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,s.default),o(n,[{key:"setUpHero",value:function(){var t=this;document.addEventListener("keydown",function(e){switch(e.keyCode){case 37:t.directionAngle=Math.PI;break;case 38:t.directionAngle=Math.PI/2;break;case 39:t.directionAngle=0;break;case 40:t.directionAngle=Math.PI/2*3;break;default:return}t.game.gamePlays||t.game.runGame(),t.selectSprites()})}},{key:"getSpeed",value:function(){this.speed=this.game.baseSpeed*this.game.level}},{key:"die",value:function(){}}]),n}();n.default=u},{"./smartPerson":6}],4:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}();var i=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.game=e,this.directionAngle=2*Math.PI*Math.random(),this.position={x:0,y:0},this.speed=e.level*e.baseSpeed/2,this.currentImg=0}return r(t,[{key:"getNextSprite",value:function(){return this.step(),this.currentImg>=this.sprites.length&&(this.currentImg=0),this.sprites[this.currentImg++]}},{key:"step",value:function(){this.getSpeed(),this.position.x+=Math.cos(this.directionAngle)*this.speed,this.position.x+this.width/2>this.game.width&&(this.position.x=-this.width/2),this.position.x+this.width/2<0&&(this.position.x=this.game.width-this.width/2),this.position.y-=Math.sin(this.directionAngle)*this.speed,this.position.y+this.height/2>this.game.height&&(this.position.y=-this.height/2),this.position.y+this.height/2<0&&(this.position.y=this.game.height-this.height/2)}},{key:"getSpeed",value:function(){this.speed=this.game.baseSpeed*this.game.level/2}}]),t}();n.default=i},{}],5:[function(e,t,n){"use strict";var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0});var r,o=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),a=e("./smartPerson"),s=(r=a)&&r.__esModule?r:{default:r};var u=function(e){function r(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r);var t=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":i(t))&&"function"!=typeof t?e:t}(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e,"rogue"));return t.selectSprites(),t.range=300,t.width=60,t.height=60,t.generatePosition(),t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":i(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(r,s.default),o(r,[{key:"step",value:function(){var e=this.game.hero.position,t=this.position;if(this.getDistanceToHero()<=this.range&&e.x!==t.x){var n=Math.atan((e.y-t.y)/(e.x-t.x));e.x>t.x&&e.y<t.y||e.x>t.x&&e.y>t.y?this.directionAngle=2*Math.PI-n:this.directionAngle=Math.PI-n,this.selectSprites()}(function e(t,n,r){null===t&&(t=Function.prototype);var i=Object.getOwnPropertyDescriptor(t,n);if(void 0===i){var o=Object.getPrototypeOf(t);return null===o?void 0:e(o,n,r)}if("value"in i)return i.value;var a=i.get;return void 0!==a?a.call(r):void 0})(r.prototype.__proto__||Object.getPrototypeOf(r.prototype),"step",this).call(this)}},{key:"generatePosition",value:function(){for(;this.position={x:Math.abs(this.width-this.game.width*Math.random()),y:this.game.height/2*Math.random()},this.getDistanceToHero()<200;);}},{key:"getDistanceToHero",value:function(){var e=this.game.hero;return Math.sqrt(Math.pow(e.position.x-this.position.x,2)+Math.pow(e.position.y-this.position.y,2))}}]),r}();n.default=u},{"./smartPerson":6}],6:[function(e,t,n){"use strict";var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0});var r,o=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),a=e("./person"),s=(r=a)&&r.__esModule?r:{default:r};var u=function(e){function r(e,t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":i(t))&&"function"!=typeof t?e:t}(this,(r.__proto__||Object.getPrototypeOf(r)).call(this,e));return n.selector=t,n.getAllSprites(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":i(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(r,s.default),o(r,[{key:"selectSprites",value:function(){this.directionAngle>=5*Math.PI/4&&this.directionAngle<=7*Math.PI/4?this.sprites=this.spritesCollection.down:this.directionAngle>=Math.PI/4&&this.directionAngle<=3*Math.PI/4?this.sprites=this.spritesCollection.up:this.directionAngle>=3*Math.PI/4&&this.directionAngle<=5*Math.PI/4?this.sprites=this.spritesCollection.left:this.sprites=this.spritesCollection.right}},{key:"getAllSprites",value:function(){this.spritesCollection={left:this.getSprites("."+this.selector+"-left-img"),right:this.getSprites("."+this.selector+"-right-img"),up:this.getSprites("."+this.selector+"-up-img"),down:this.getSprites("."+this.selector+"-down-img")}}},{key:"getSprites",value:function(e){return[].slice.call(document.querySelectorAll(e))}}]),r}();n.default=u},{"./person":4}],7:[function(e,t,n){"use strict";var r=o(e("./utils/router")),i=o(e("./routes"));function o(e){return e&&e.__esModule?e:{default:e}}(0,o(e("./utils/addButtonsForMobile")).default)(),new r.default(i.default)},{"./routes":8,"./utils/addButtonsForMobile":9,"./utils/router":12}],8:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=o(e("./gameObjects/gameState")),i=o(e("./utils/firebase"));function o(e){return e&&e.__esModule?e:{default:e}}var a=document.querySelector(".content"),s=new r.default(a),u=[{match:"",onEnter:function(){window.location.hash="game"}},{match:"about",onEnter:function(){c("about"),a.innerHTML='<h1 class="about"><span>Super game Cat vs Ninjas</span><h1>'}},{match:"game",onEnter:function(){c("game"),s.setUpGame()},onLeave:function(){s.endGame()}},{match:"scores",onEnter:function(){c("scores"),i.default.getScores().then(function(e){a.innerHTML='<h1 class="about"><span>Scores</span></h1>';var n=document.createElement("ol");e.forEach(function(e){var t=document.createElement("li");t.innerHTML=e.name+" - "+e.score,n.appendChild(t)});var t=document.createElement("div");t.classList.add("w-100"),a.appendChild(t);var r=document.createElement("div");r.appendChild(n),a.appendChild(r)})}}];function c(e){document.querySelector(".active").className="",document.querySelector('[href="#'+e+'"]').parentElement.className="active"}n.default=u},{"./gameObjects/gameState":2,"./utils/firebase":11}],9:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){if((0,o.default)()){var e=document.createElement("div");e.classList.add("buttons");var t=document.createElement("button");t.innerHTML="<",t.classList.add("left");var n=document.createElement("button");n.innerHTML="^",n.classList.add("up");var r=document.createElement("button");r.innerHTML=">",r.classList.add("right");var i=document.createElement("button");i.innerHTML="v",i.classList.add("down"),e.appendChild(t),e.appendChild(n),e.appendChild(r),e.appendChild(i),e.addEventListener("click",function(e){if(e.target.matches(".right")){var t=new Event("keydown");return t.keyCode=39,void document.dispatchEvent(t)}if(e.target.matches(".left")){var n=new Event("keydown");return n.keyCode=37,void document.dispatchEvent(n)}if(e.target.matches(".up")){var r=new Event("keydown");return r.keyCode=38,void document.dispatchEvent(r)}if(e.target.matches(".down")){var i=new Event("keydown");return i.keyCode=40,void document.dispatchEvent(i)}}),document.body.appendChild(e)}};var r,i=e("./detectMobile"),o=(r=i)&&r.__esModule?r:{default:r}},{"./detectMobile":10}],10:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){return!!(navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/webOS/i)||navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPod/i)||navigator.userAgent.match(/BlackBerry/i)||navigator.userAgent.match(/Windows Phone/i))}},{}],11:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}();var i="https://kate-arcade-game.firebaseio.com/.json",o=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return r(e,null,[{key:"getScores",value:function(){return fetch(i).then(function(e){return e.json()})}},{key:"saveScore",value:function(n){this.getScores().then(function(e){var t=[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(e||[]),[n]);t.sort(function(e,t){return e.score>t.score?-1:e.score<t.score?1:0}),t.splice(10),fetch(i,{method:"PUT",body:JSON.stringify(t)})})}}]),e}();n.default=o},{}],12:[function(e,t,n){"use strict";function r(e){var t=this;this.routes=e||[],this.currentRoute,this.previousRoute,this.currentParams,this.previousParams,window.addEventListener("hashchange",function(){t.handler(window.location.hash)}),this.handler(window.location.hash)}Object.defineProperty(n,"__esModule",{value:!0}),(n.default=r).prototype={handler:function(e){this.previousRoute=this.currentRoute,this.previousParams=this.currentParams,this.currentRoute=this.findNewRoute(e),this.launchHandlers()},findNewRoute:function(e){e=e.slice(1);for(var t=0;t<this.routes.length;t++){var n=this.routes[t];if("string"==typeof n.match&&n.match===e)return this.currentParams="",n;if("function"==typeof n.match&&n.match(e))return this.currentParams="",n;if(n.match instanceof RegExp&&n.match.test(e))return this.currentParams=e.match(n.match)||[],this.currentParams.splice(0,1),n}},launchHandlers:function(){var e=this;Promise.resolve().then(function(){e.previousRoute&&e.previousRoute.onLeave&&e.previousRoute.onLeave(e.previousParams)}).then(function(){e.currentRoute&&e.currentRoute.onBeforeEnter&&e.currentRoute.onBeforeEnter(e.currentParams)}).then(function(){e.currentRoute&&e.currentRoute.onEnter&&e.currentRoute.onEnter(e.currentParams)})}}},{}]},{},[7]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
