!function u(i,a,s){function c(t,e){if(!a[t]){if(!i[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(f)return f(t,!0);var r=new Error("Cannot find module '"+t+"'");throw r.code="MODULE_NOT_FOUND",r}var o=a[t]={exports:{}};i[t][0].call(o.exports,function(e){return c(i[t][1][e]||e)},o,o.exports,u,i,a,s)}return a[t].exports}for(var f="function"==typeof require&&require,e=0;e<s.length;e++)c(s[e]);return c}({1:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r,o=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),u=e("./hero"),i=(r=u)&&r.__esModule?r:{default:r};var a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.level=1,this.baseSpeed=20,this.canvas=document.querySelector("canvas"),this.canvas.width=800,this.canvas.height=800,this.context=this.canvas.getContext("2d"),this.hero=new i.default(this),this.runGame()}return o(e,[{key:"runGame",value:function(){var e=this;setInterval(function(){e.context.clearRect(0,0,e.canvas.width,e.canvas.height),e.context.drawImage(e.hero.getNextSprite(),e.hero.position.x,e.hero.position.y,115,100)},30)}}]),e}();n.default=a},{"./hero":2}],2:[function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0});var o,u=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),i=e("./person"),a=(o=i)&&o.__esModule?o:{default:o};var s=function(e){function n(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n);var t=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e,".cat-img"));return t.setUpHero(),t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,a.default),u(n,[{key:"getPosition",value:function(){}},{key:"setUpHero",value:function(){var t=this;document.addEventListener("keydown",function(e){37===e.keyCode&&(t.position.x-=5),38===e.keyCode&&(t.position.y-=5),39===e.keyCode&&(t.position.x+=5),40===e.keyCode&&(t.position.y+=5)})}}]),n}();n.default=s},{"./person":3}],3:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}();var o=function(){function n(e,t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this.position={x:0,y:0},this.sprites=[].slice.call(document.querySelectorAll(t)),this.speed=e.level*e.baseSpeed,this.currentImg=0}return r(n,[{key:"getNextSprite",value:function(){return this.currentImg>=this.sprites.length&&(this.currentImg=0),this.sprites[this.currentImg++]}}]),n}();n.default=o},{}],4:[function(e,t,n){"use strict";var r=u(e("./utils/router")),o=u(e("./routes"));function u(e){return e&&e.__esModule?e:{default:e}}new r.default(o.default)},{"./routes":5,"./utils/router":6}],5:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r,o=e("./gameObjects/gameState"),u=(r=o)&&r.__esModule?r:{default:r};var i=document.querySelector(".content"),a=[{match:"",onEnter:function(){window.location.hash="game"}},{match:"about",onEnter:function(){s("about"),i.innerHTML='<h1 class="about"><span>Super game Cats vs Ninjas</span><h1>'}},{match:"game",onEnter:function(){s("game");var e=document.createElement("canvas");i.innerHTML="",i.appendChild(e),new u.default}},{match:"scores",onEnter:function(){s("scores"),i.innerHTML='<h1 class="about"><span>Scores</span><h1>'}}];function s(e){document.querySelector(".active").className="",document.querySelector('[href="#'+e+'"]').parentElement.className="active"}n.default=a},{"./gameObjects/gameState":1}],6:[function(e,t,n){"use strict";function r(e){var t=this;this.routes=e||[],this.currentRoute,this.previousRoute,this.currentParams,this.previousParams,window.addEventListener("hashchange",function(){t.handler(window.location.hash)}),this.handler(window.location.hash)}Object.defineProperty(n,"__esModule",{value:!0}),(n.default=r).prototype={handler:function(e){this.previousRoute=this.currentRoute,this.previousParams=this.currentParams,this.currentRoute=this.findNewRoute(e),this.launchHandlers()},findNewRoute:function(e){e=e.slice(1);for(var t=0;t<this.routes.length;t++){var n=this.routes[t];if("string"==typeof n.match&&n.match===e)return this.currentParams="",n;if("function"==typeof n.match&&n.match(e))return this.currentParams="",n;if(n.match instanceof RegExp&&n.match.test(e))return this.currentParams=e.match(n.match)||[],this.currentParams.splice(0,1),n}},launchHandlers:function(){var e=this;Promise.resolve().then(function(){e.previousRoute&&e.previousRoute.onLeave&&e.previousRoute.onLeave(e.previousParams)}).then(function(){e.currentRoute&&e.currentRoute.onBeforeEnter&&e.currentRoute.onBeforeEnter(e.currentParams)}).then(function(){e.currentRoute&&e.currentRoute.onEnter&&e.currentRoute.onEnter(e.currentParams)})}}},{}]},{},[4]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
