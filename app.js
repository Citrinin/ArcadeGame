!function o(a,s,u){function c(t,e){if(!s[t]){if(!a[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(h)return h(t,!0);var r=new Error("Cannot find module '"+t+"'");throw r.code="MODULE_NOT_FOUND",r}var i=s[t]={exports:{}};a[t][0].call(i.exports,function(e){return c(a[t][1][e]||e)},i,i.exports,o,a,s,u)}return s[t].exports}for(var h="function"==typeof require&&require,e=0;e<u.length;e++)c(u[e]);return c}({1:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r,i=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),o=e("./hero"),a=(r=o)&&r.__esModule?r:{default:r};var s=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.width=800,this.height=800,this.level=1,this.baseSpeed=5,this.canvas=document.querySelector("canvas"),this.canvas.width=this.width,this.canvas.height=this.height,this.context=this.canvas.getContext("2d"),this.hero=new a.default(this),this.gamePlays=!1,this.runGame(),this.timer=0}return i(e,[{key:"runGame",value:function(){var e=this;this.gamePlays=!0,this.timer=setInterval(function(){e.context.clearRect(0,0,e.width,e.height),e.context.drawImage(e.hero.getNextSprite(),e.hero.position.x,e.hero.position.y,115,100)},30)}},{key:"pauseGame",value:function(){this.gamePlays=!1,clearInterval(this.timer)}}]),e}();n.default=s},{"./hero":2}],2:[function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0});var i,o=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),a=e("./person"),s=(i=a)&&i.__esModule?i:{default:i};var u=function(e){function n(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n);var t=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e,".cat-img"));return t.setUpHero(),t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,s.default),o(n,[{key:"getPosition",value:function(){}},{key:"setUpHero",value:function(){var t=this;document.addEventListener("keydown",function(e){37===e.keyCode&&(t.position.x-=5),38===e.keyCode&&(t.position.y-=5),39===e.keyCode&&(t.position.x+=5),40===e.keyCode&&(t.position.y+=5)})}}]),n}();n.default=u},{"./person":3}],3:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}();var r=function(){function r(e,t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r),this.mainHero=n,this.game=e,this.directionAngle=this.mainHero?0:2*Math.PI*Math.random(),this.position={x:0,y:0},this.sprites=[].slice.call(document.querySelectorAll(t)),this.speed=e.level*e.baseSpeed,this.currentImg=0}return i(r,[{key:"getNextSprite",value:function(){return this.step(),this.currentImg>=this.sprites.length&&(this.currentImg=0),this.sprites[this.currentImg++]}},{key:"step",value:function(){this.position.x+=Math.cos(this.directionAngle)*this.speed,this.position.x>this.game.width&&(this.position.x=0),this.position.x<0&&(this.position.x=this.game.width),this.position.y+=Math.sin(this.directionAngle)*this.speed,this.position.y>this.game.height&&(this.position.y=0),this.position.y<0&&(this.position.y=this.game.height)}}]),r}();n.default=r},{}],4:[function(e,t,n){"use strict";var r=o(e("./utils/router")),i=o(e("./routes"));function o(e){return e&&e.__esModule?e:{default:e}}new r.default(i.default)},{"./routes":5,"./utils/router":7}],5:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=i(e("./gameObjects/gameState")),o=i(e("./utils/detectMobile"));function i(e){return e&&e.__esModule?e:{default:e}}var a=document.querySelector(".content");!function(){if((0,o.default)()){var e=document.createElement("div");e.classList.add("buttons");var t=document.createElement("button");t.innerHTML="<",t.classList.add("left");var n=document.createElement("button");n.innerHTML="^",n.classList.add("up");var r=document.createElement("button");r.innerHTML=">",r.classList.add("right");var i=document.createElement("button");i.innerHTML="v",i.classList.add("down"),e.appendChild(t),e.appendChild(n),e.appendChild(r),e.appendChild(i),e.addEventListener("click",function(e){if(e.target.matches(".right")){var t=new Event("keydown");return t.keyCode=39,void document.dispatchEvent(t)}if(e.target.matches(".left")){var n=new Event("keydown");return n.keyCode=37,void document.dispatchEvent(n)}if(e.target.matches(".up")){var r=new Event("keydown");return r.keyCode=38,void document.dispatchEvent(r)}if(e.target.matches(".down")){var i=new Event("keydown");return i.keyCode=40,void document.dispatchEvent(i)}}),document.body.appendChild(e)}}();var s=[{match:"",onEnter:function(){window.location.hash="game"}},{match:"about",onEnter:function(){u("about"),a.innerHTML='<h1 class="about"><span>Super game Cats vs Ninjas</span><h1>'}},{match:"game",onEnter:function(){u("game");var e=document.createElement("canvas");a.innerHTML="",a.appendChild(e),new r.default}},{match:"scores",onEnter:function(){u("scores"),a.innerHTML='<h1 class="about"><span>Scores</span><h1>'}}];function u(e){document.querySelector(".active").className="",document.querySelector('[href="#'+e+'"]').parentElement.className="active"}n.default=s},{"./gameObjects/gameState":1,"./utils/detectMobile":6}],6:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){return!!(navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/webOS/i)||navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPod/i)||navigator.userAgent.match(/BlackBerry/i)||navigator.userAgent.match(/Windows Phone/i))}},{}],7:[function(e,t,n){"use strict";function r(e){var t=this;this.routes=e||[],this.currentRoute,this.previousRoute,this.currentParams,this.previousParams,window.addEventListener("hashchange",function(){t.handler(window.location.hash)}),this.handler(window.location.hash)}Object.defineProperty(n,"__esModule",{value:!0}),(n.default=r).prototype={handler:function(e){this.previousRoute=this.currentRoute,this.previousParams=this.currentParams,this.currentRoute=this.findNewRoute(e),this.launchHandlers()},findNewRoute:function(e){e=e.slice(1);for(var t=0;t<this.routes.length;t++){var n=this.routes[t];if("string"==typeof n.match&&n.match===e)return this.currentParams="",n;if("function"==typeof n.match&&n.match(e))return this.currentParams="",n;if(n.match instanceof RegExp&&n.match.test(e))return this.currentParams=e.match(n.match)||[],this.currentParams.splice(0,1),n}},launchHandlers:function(){var e=this;Promise.resolve().then(function(){e.previousRoute&&e.previousRoute.onLeave&&e.previousRoute.onLeave(e.previousParams)}).then(function(){e.currentRoute&&e.currentRoute.onBeforeEnter&&e.currentRoute.onBeforeEnter(e.currentParams)}).then(function(){e.currentRoute&&e.currentRoute.onEnter&&e.currentRoute.onEnter(e.currentParams)})}}},{}]},{},[4]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
