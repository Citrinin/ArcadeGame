!function o(a,s,c){function u(t,e){if(!s[t]){if(!a[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(h)return h(t,!0);var i=new Error("Cannot find module '"+t+"'");throw i.code="MODULE_NOT_FOUND",i}var r=s[t]={exports:{}};a[t][0].call(r.exports,function(e){return u(a[t][1][e]||e)},r,r.exports,o,a,s,c)}return s[t].exports}for(var h="function"==typeof require&&require,e=0;e<c.length;e++)u(c[e]);return u}({1:[function(e,t,n){"use strict";var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0});var r,o=e("./enemy"),a=(r=o)&&r.__esModule?r:{default:r};var s=function(e){function n(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n);var t=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":i(t))&&"function"!=typeof t?e:t}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e,"goblin"));return t.width=36,t.height=48,t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":i(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,a.default),n}();n.default=s},{"./enemy":2}],2:[function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0});var i,o=function(){function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}}(),a=e("./person"),s=(i=a)&&i.__esModule?i:{default:i};var c=function(e){function i(e,t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(i.__proto__||Object.getPrototypeOf(i)).call(this,e,t));return n.width=0,n.height=0,n.generatePosition(),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(i,s.default),o(i,[{key:"generatePosition",value:function(){for(;this.position={x:Math.abs(this.width-this.game.width*Math.random()),y:this.game.height/2*Math.random()},this.getDistanceToHero()<200;);}},{key:"getDistanceToHero",value:function(){var e=this.game.hero;return Math.sqrt(Math.pow(e.position.x-this.position.x,2)+Math.pow(e.position.y-this.position.y,2))}}]),i}();n.default=c},{"./person":6}],3:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}}();var r=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.width=30,this.height=30,this.game=e,this.position={x:Math.abs(this.width-this.game.width*Math.random()),y:this.game.height/2*Math.random()},this.sprite=this.generateSptite()}return i(t,[{key:"getNextSprite",value:function(){return this.sprite}},{key:"generateSptite",value:function(){var e=document.querySelectorAll(".fruit-img");return e[Math.round(Math.random()*(e.length-1))]}},{key:"personState",get:function(){return{x:this.position.x,y:this.position.y}},set:function(e){this.position.x=e.x,this.position.y=e.y}}]),t}();n.default=r},{}],4:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}}(),r=u(e("./hero")),o=u(e("./dummyEnemy")),a=u(e("./smartEnemy")),s=u(e("../utils/firebase")),c=u(e("./fruit"));function u(e){return e&&e.__esModule?e:{default:e}}var h=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.gameOnScreen=!1,this.width=1e3<=window.innerWidth?1e3:window.innerWidth,this.height=(document.documentElement.clientHeight||document.body.clientHeight)-160,this.containter=e,this.setUpHero()}return i(t,[{key:"setUpGame",value:function(){var e=this;this.setUpCanvas(),this.hero=new r.default(this),this.replayData=[],this.characters=new Array(2).fill(0).map(function(){return new o.default(e)}),this.characters.push(new a.default(this)),this.fruits=[],this.level=1,this.baseSpeed=0,this.gamePlays=!1,this.gameTimer=0,this.timerHandler=setInterval(function(){return e.gameStep()},100)}},{key:"gameStep",value:function(){var t=this;this.context.clearRect(0,0,this.width,this.height),this.context.font="20px Segoe UI",this.context.fillText("Scores "+(this.gameTimer?this.getScore():0),this.width-150,30),this.context.fillText("Level "+this.level,this.width-150,55);var n=[];this.drawCharacter(this.hero),this.characters.forEach(function(e){t.drawCharacter(e),n.push({character:e,state:e.personState})}),this.fruits.forEach(function(e){t.drawCharacter(e),n.push({character:e,state:e.personState})}),this.fruits=this.fruits.filter(function(e){return!t.checkCharactersIntersection(t.hero,e)||(t.hero.enableRage(),!1)}),n.push({character:this.hero,state:this.hero.personState}),this.gamePlays&&this.replayData.push(n),this.hero.rageMode?this.characters=this.characters.filter(function(e){return!t.checkCharactersIntersection(t.hero,e)}):this.characters.some(function(e){return t.checkCharactersIntersection(t.hero,e)})&&this.loseGame()}},{key:"drawCharacter",value:function(e){this.context.drawImage(e.getNextSprite(),e.position.x,e.position.y,e.width,e.height)}},{key:"getScore",value:function(){return Math.round(((new Date).getTime()-this.gameTimer)/100)/10}},{key:"checkCharactersIntersection",value:function(e,t){if(e.position.x+20<=t.position.x+t.width&&e.position.x+e.width>=t.position.x+20&&e.position.y+20<=t.position.y+t.height&&e.position.y+e.height>=t.position.y+20)return!0}},{key:"runGame",value:function(){this.gameTimer=(new Date).getTime(),this.gamePlays=!0,this.baseSpeed=5,this.setLevel()}},{key:"loseGame",value:function(){var n=this;setTimeout(function(){n.endGame();var e=n.getScore(),t=prompt("Your score is "+e+" seconds.\n Enter your name","I'm Batman");t&&s.default.saveScore({name:t,score:e}),n.addEndGameButtons()},0)}},{key:"endGame",value:function(){clearInterval(this.timerHandler),clearInterval(this.levelTimer),this.gamePlays=!1,this.baseSpeed=0,this.gameOnScreen=!1}},{key:"setLevel",value:function(){var t=this;this.levelTimer=setInterval(function(){t.level+=1,t.characters.push(new o.default(t)),t.level%2==1&&t.characters.push(new a.default(t)),1<=t.level&&t.fruits.push(new c.default(t));var e=document.createElement("div");e.classList.add("level-up"),e.innerHTML="Level Up! Current level - "+t.level,t.containter.appendChild(e),setTimeout(function(){t.containter.removeChild(e)},1e3)},1e4)}},{key:"addEndGameButtons",value:function(){var e=document.createElement("div");e.classList.add("end-buttons");var t=document.createElement("button");t.innerHTML="Watch replay",t.addEventListener("click",function(){window.location.hash="watchreplay"});var n=document.createElement("button");n.innerHTML="Start new game",n.addEventListener("click",function(){window.location.hash="newgame"}),e.appendChild(t),e.appendChild(n),this.containter.appendChild(e)}},{key:"setUpHero",value:function(){var t=this;document.addEventListener("keydown",function(e){if(t.gameOnScreen){switch(e.keyCode){case 37:t.hero.directionAngle=Math.PI;break;case 38:t.hero.directionAngle=Math.PI/2;break;case 39:t.hero.directionAngle=0;break;case 40:t.hero.directionAngle=Math.PI/2*3;break;default:return}t.gamePlays||t.runGame()}})}},{key:"setUpCanvas",value:function(){this.gameOnScreen=!0,this.canvas=document.createElement("canvas"),this.containter.innerHTML="",this.containter.appendChild(this.canvas),this.canvas.width=this.width,this.canvas.height=this.height,this.context=this.canvas.getContext("2d")}},{key:"replayGame",value:function(){var t=this;clearInterval(this.replayTimer);var e=0;this.replayTimer=setInterval(function(){e>=(t.replayData||[]).length?clearInterval(t.replayTimer):(t.context.clearRect(0,0,t.width,t.height),t.replayData[e].forEach(function(e){e.character.personState=e.state,t.drawCharacter(e.character)}),e++)},20)}}]),t}();n.default=h},{"../utils/firebase":12,"./dummyEnemy":1,"./fruit":3,"./hero":5,"./smartEnemy":7}],5:[function(e,t,n){"use strict";var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0});var r,o=function(){function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}}(),a=e("./person"),s=(r=a)&&r.__esModule?r:{default:r};var c=function(e){function n(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n);var t=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":i(t))&&"function"!=typeof t?e:t}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e,"knight"));return t.width=55,t.height=75,t.position={x:(t.game.width-t.width)/2,y:t.game.height-t.height},t.rageMode=!1,t.sprites=t.spritesCollection.down,t.directionAngle=Math.PI/2,t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":i(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,s.default),o(n,[{key:"getSpeed",value:function(){this.speed=this.game.baseSpeed*this.game.level}},{key:"enableRage",value:function(){var e=this;this.rageMode=!0,this.selectSpritesCollection(),this.game.canvas.classList.add("rage-canvas"),setTimeout(function(){return e.game.canvas.classList.remove("rage-canvas")},3e3),setTimeout(function(){e.rageMode=!1,e.selectSpritesCollection()},3500)}},{key:"selectSpritesCollection",value:function(){!0===this.rageMode?(this.width=75,this.spritesCollection=this.furySpritesCollection):(this.width=55,this.spritesCollection=this.normalSpritesColletcion),this.selectSprites()}},{key:"getAllSprites",value:function(){(function e(t,n,i){null===t&&(t=Function.prototype);var r=Object.getOwnPropertyDescriptor(t,n);if(void 0===r){var o=Object.getPrototypeOf(t);return null===o?void 0:e(o,n,i)}if("value"in r)return r.value;var a=r.get;return void 0!==a?a.call(i):void 0})(n.prototype.__proto__||Object.getPrototypeOf(n.prototype),"getAllSprites",this).call(this),this.normalSpritesColletcion=this.spritesCollection;var e="knight-kills";this.furySpritesCollection={left:this.getSprites("."+e+"-left-img"),right:this.getSprites("."+e+"-right-img"),up:this.getSprites("."+e+"-up-img"),down:this.getSprites("."+e+"-down-img")}}},{key:"personState",get:function(){return{x:this.position.x,y:this.position.y,directionAngle:this.directionAngle,rageMode:this.rageMode}},set:function(e){this.directionAngle=e.directionAngle,this.position.x=e.x,this.position.y=e.y,this.rageMode!==e.rageMode&&(this.rageMode=e.rageMode,this.spritesCollection=this.rageMode?this.furySpritesCollection:this.normalSpritesColletcion,this.selectSprites())}}]),n}();n.default=c},{"./person":6}],6:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}}();var r=function(){function n(e,t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this.selector=t,this.getAllSprites(),this.game=e,this.directionAngle=2*Math.PI*Math.random(),this.speed=e.level*e.baseSpeed/2,this.currentImg=0}return i(n,[{key:"selectSprites",value:function(){this.directionAngle>=5*Math.PI/4&&this.directionAngle<=7*Math.PI/4?this.sprites=this.spritesCollection.down:this.directionAngle>=Math.PI/4&&this.directionAngle<=3*Math.PI/4?this.sprites=this.spritesCollection.up:this.directionAngle>=3*Math.PI/4&&this.directionAngle<=5*Math.PI/4?this.sprites=this.spritesCollection.left:this.sprites=this.spritesCollection.right}},{key:"getAllSprites",value:function(){this.spritesCollection={left:this.getSprites("."+this.selector+"-left-img"),right:this.getSprites("."+this.selector+"-right-img"),up:this.getSprites("."+this.selector+"-up-img"),down:this.getSprites("."+this.selector+"-down-img")}}},{key:"getSprites",value:function(e){return[].slice.call(document.querySelectorAll(e))}},{key:"getNextSprite",value:function(){return this.step(),this.currentImg>=this.sprites.length&&(this.currentImg=0),this.sprites[this.currentImg++]}},{key:"step",value:function(){this.getSpeed(),this.position.x+=Math.cos(this.directionAngle)*this.speed,this.position.x+this.width/2>this.game.width&&(this.position.x=-this.width/2),this.position.x+this.width/2<0&&(this.position.x=this.game.width-this.width/2),this.position.y-=Math.sin(this.directionAngle)*this.speed,this.position.y+this.height/2>this.game.height&&(this.position.y=-this.height/2),this.position.y+this.height/2<0&&(this.position.y=this.game.height-this.height/2)}},{key:"getSpeed",value:function(){this.speed=this.game.baseSpeed*this.game.level/2}},{key:"directionAngle",get:function(){return this._directionAngle},set:function(e){this._directionAngle=e,this.selectSprites()}},{key:"personState",get:function(){return{x:this.position.x,y:this.position.y,directionAngle:this.directionAngle}},set:function(e){this.directionAngle=e.directionAngle,this.position.x=e.x,this.position.y=e.y}}]),n}();n.default=r},{}],7:[function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};Object.defineProperty(n,"__esModule",{value:!0});var i,o=function(){function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}}(),a=e("./enemy"),s=(i=a)&&i.__esModule?i:{default:i};var c=function(e){function i(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i);var t=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!==(void 0===t?"undefined":r(t))&&"function"!=typeof t?e:t}(this,(i.__proto__||Object.getPrototypeOf(i)).call(this,e,"rogue"));return t.range=300,t.width=40,t.height=45,t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":r(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(i,s.default),o(i,[{key:"step",value:function(){var e=this.game.hero.position,t=this.position;if(this.getDistanceToHero()<=this.range&&e.x!==t.x){var n=Math.atan((e.y-t.y)/(e.x-t.x));e.x>t.x&&e.y<t.y||e.x>t.x&&e.y>t.y?this.directionAngle=2*Math.PI-n:this.directionAngle=Math.PI-n}(function e(t,n,i){null===t&&(t=Function.prototype);var r=Object.getOwnPropertyDescriptor(t,n);if(void 0===r){var o=Object.getPrototypeOf(t);return null===o?void 0:e(o,n,i)}if("value"in r)return r.value;var a=r.get;return void 0!==a?a.call(i):void 0})(i.prototype.__proto__||Object.getPrototypeOf(i.prototype),"step",this).call(this)}}]),i}();n.default=c},{"./enemy":2}],8:[function(e,t,n){"use strict";var i=o(e("./utils/router")),r=o(e("./routes"));function o(e){return e&&e.__esModule?e:{default:e}}(0,o(e("./utils/addButtonsForMobile")).default)(),new i.default(r.default)},{"./routes":9,"./utils/addButtonsForMobile":10,"./utils/router":13}],9:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=o(e("./gameObjects/gameState")),r=o(e("./utils/firebase"));function o(e){return e&&e.__esModule?e:{default:e}}var a=document.querySelector(".content"),s=new i.default(a),c=[{match:"",onEnter:function(){window.location.hash="game"}},{match:"about",onEnter:function(){u("about"),a.innerHTML='<h1><span>Super arcade game</span></h1><div class="w-100"/><div><h2>Author <a href="https://github.com/citrinin">Kate Kuzkina</a></h2></div>'}},{match:"game",onEnter:function(){u("game"),s.setUpGame()},onLeave:function(){s.endGame()}},{match:"scores",onEnter:function(){u("scores"),r.default.getScores().then(function(e){a.innerHTML='<h1 class="about"><span>Scores</span></h1>';var n=document.createElement("ol");e.forEach(function(e){var t=document.createElement("li");t.innerHTML=e.name+" - "+e.score,n.appendChild(t)});var t=document.createElement("div");t.classList.add("w-100"),a.appendChild(t);var i=document.createElement("div");i.appendChild(n),a.appendChild(i)})}},{match:"replay",onEnter:function(){0!==(s.replayData||[]).length?s.replayGame():window.location.hash="game"}},{match:"watchreplay",onEnter:function(){window.location.hash="replay"}},{match:"newgame",onEnter:function(){window.location.hash="game"}}];function u(e){document.querySelector(".active").className="",document.querySelector('[href="#'+e+'"]').parentElement.className="active"}n.default=c},{"./gameObjects/gameState":4,"./utils/firebase":12}],10:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){if((0,o.default)()){var e=document.createElement("div");e.classList.add("buttons");var t=document.createElement("button");t.innerHTML="<",t.classList.add("left");var n=document.createElement("button");n.innerHTML="^",n.classList.add("up");var i=document.createElement("button");i.innerHTML=">",i.classList.add("right");var r=document.createElement("button");r.innerHTML="v",r.classList.add("down"),e.appendChild(t),e.appendChild(n),e.appendChild(i),e.appendChild(r),e.addEventListener("click",function(e){if(e.target.matches(".right")){var t=new Event("keydown");return t.keyCode=39,void document.dispatchEvent(t)}if(e.target.matches(".left")){var n=new Event("keydown");return n.keyCode=37,void document.dispatchEvent(n)}if(e.target.matches(".up")){var i=new Event("keydown");return i.keyCode=38,void document.dispatchEvent(i)}if(e.target.matches(".down")){var r=new Event("keydown");return r.keyCode=40,void document.dispatchEvent(r)}}),document.body.appendChild(e)}};var i,r=e("./detectMobile"),o=(i=r)&&i.__esModule?i:{default:i}},{"./detectMobile":11}],11:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){return!!(navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/webOS/i)||navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPod/i)||navigator.userAgent.match(/BlackBerry/i)||navigator.userAgent.match(/Windows Phone/i))}},{}],12:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}}();var r="https://kate-arcade-game.firebaseio.com/.json",o=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return i(e,null,[{key:"getScores",value:function(){return fetch(r).then(function(e){return e.json()})}},{key:"saveScore",value:function(n){this.getScores().then(function(e){var t=[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(e||[]),[n]);t.sort(function(e,t){return e.score>t.score?-1:e.score<t.score?1:0}),t.splice(10),fetch(r,{method:"PUT",body:JSON.stringify(t)})})}}]),e}();n.default=o},{}],13:[function(e,t,n){"use strict";function i(e){var t=this;this.routes=e||[],this.currentRoute,this.previousRoute,this.currentParams,this.previousParams,window.addEventListener("hashchange",function(){t.handler(window.location.hash)}),this.handler(window.location.hash)}Object.defineProperty(n,"__esModule",{value:!0}),(n.default=i).prototype={handler:function(e){this.previousRoute=this.currentRoute,this.previousParams=this.currentParams,this.currentRoute=this.findNewRoute(e),this.launchHandlers()},findNewRoute:function(e){e=e.slice(1);for(var t=0;t<this.routes.length;t++){var n=this.routes[t];if("string"==typeof n.match&&n.match===e)return this.currentParams="",n;if("function"==typeof n.match&&n.match(e))return this.currentParams="",n;if(n.match instanceof RegExp&&n.match.test(e))return this.currentParams=e.match(n.match)||[],this.currentParams.splice(0,1),n}},launchHandlers:function(){var e=this;Promise.resolve().then(function(){e.previousRoute&&e.previousRoute.onLeave&&e.previousRoute.onLeave(e.previousParams)}).then(function(){e.currentRoute&&e.currentRoute.onBeforeEnter&&e.currentRoute.onBeforeEnter(e.currentParams)}).then(function(){e.currentRoute&&e.currentRoute.onEnter&&e.currentRoute.onEnter(e.currentParams)})}}},{}]},{},[8]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
